---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: {{ podname }}
  namespace: {{ namespace }}
  labels:
    name: {{ podname }}
    site: {{ site }}
    role: data
spec:
  replicas: 1
  selector:
    matchLabels:
      role: data
  template:
    metadata:
      labels:
        site: {{ site }}
        role: data
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - { key: kubernetes.io/hostname, operator: In, values: [{{ inventory_hostname }}] }

      hostname: {{ podname }}
      containers:
      - name: {{ podname }}
        image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0

        env:
        - name: cluster.name
          value: {{ cluster }}
        - name: node.name
          value: {{ podname }}
        - name: discovery.seed_hosts
          value: elastic-master
        - name: ES_JAVA_OPTS
          value: -Xms1024m -Xmx1024m
        - name: node.roles
          value: "data, ingest"
        - name: xpack.security.http.ssl.enabled
          value: "true"
        - name: xpack.security.http.ssl.key
          value: /usr/share/elasticsearch/config/tls/tls.key
        - name: xpack.security.http.ssl.certificate
          value: /usr/share/elasticsearch/config/tls/tls.crt
        - name: xpack.security.http.ssl.certificate_authorities
          value: /usr/share/elasticsearch/config/tls/ca.cert
        - name: xpack.security.http.ssl.verification_mode
          value: certificate
        - name: xpack.security.transport.ssl.enabled
          value: "false"
        - name: xpack.security.transport.ssl.key
          value: /usr/share/elasticsearch/config/tls/tls.key
        - name: xpack.security.transport.ssl.certificate
          value: /usr/share/elasticsearch/config/tls/tls.crt
        - name: xpack.security.transport.ssl.certificate_authorities
          value: /usr/share/elasticsearch/config/tls/ca.cert
        - name: xpack.security.transport.ssl.verification_mode
          value: certificate

        ports:
        - containerPort: 9200
          protocol: TCP
          name: elastic-rest
        - containerPort: 9300
          protocol: TCP
          name: elastic-ctrl

        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: tls
          mountPath: /usr/share/elasticsearch/config/tls

        livenessProbe:
          httpGet:
            path: /
            port: 9200
          initialDelaySeconds: 90
          periodSeconds: 10

      volumes:
      - name: data
        hostPath:
          path: {{ volume }}
          type: ""
      - name: tls
        secret:
          secretName: elastic-certs 


---
apiVersion: v1
kind: Service
metadata:
  name: {{ podname }}
  namespace: {{ namespace }}
spec:
  selector:
    name: {{ podname }}
  ports:
  - name: elastic-rest
    port: 9200
    targetPort: 9200
    protocol: TCP        
  clusterIP: None        
