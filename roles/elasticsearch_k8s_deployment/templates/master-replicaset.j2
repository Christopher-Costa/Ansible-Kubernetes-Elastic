---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: {{ replicaset_name }}
  namespace: {{ namespace }}
  labels:
    role: master

spec:
  replicas: {{ master_replicas }}
  selector:
    matchLabels:
      role: master
  template:
    metadata:
      labels:
        site: {{ site }}
        role: master
        service: {{ service | default('master') }}
    spec:
      nodeSelector:
        site: {{ site }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - { key: service, operator: In, values: [{{ service | default('master')}}] }
            topologyKey: kubernetes.io/hostname

      containers:
      - name: elastic-master
        image: docker.elastic.co/elasticsearch/elasticsearch:{{ version }}
        env:
        - name: cluster.name
          value: {{ cluster }}
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
{% if version is version('7.0.0', '<') %}
        - name: discovery.zen.minimum_master_nodes
          value: "{{ minimum_masters }}"
        - name: discovery.zen.ping.unicast.hosts
          value: elastic-master.{{ site }}.svc.cluster.local
        - name: node.master
          value: "true"
        - name: node.data
          value: "false"
        - name: node.ingest
          value: "false"
{% else %}
{% if elastic_bootstrap | default(false) | bool %}
        - name: cluster.initial_master_nodes
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
{% endif %}
        - name: discovery.seed_hosts
          value: elastic-master
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx512m
        - name: node.roles
          value: "master"
{% endif %}
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx512m
        livenessProbe:
          httpGet:
            path: /
            port: 9200
          initialDelaySeconds: 90
          periodSeconds: 10
        ports:
        - containerPort: 9200
          protocol: TCP
          name: elastic-rest
        - containerPort: 9300
          protocol: TCP
          name: elastic-ctrl
{% if version is version('7.0.0', '>=') %}
{% if not elastic_bootstrap | default(false) | bool %}
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: data
      volumes:
      - hostPath:
          path: {{ volume | default('') }}
          type: ""
        name: data
{% endif %}
{% endif %}
